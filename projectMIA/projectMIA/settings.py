"""
Django settings for projectMIA project.

Generated by 'django-admin startproject' using Django 3.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os, datetime


# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
ROOT_DIR = os.path.dirname(BASE_DIR)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '^9b91)!*dw%pv4_hzjk7=(g_q*sbsk%us2ft=(6ry5+8^waln^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['docker-api', 'django_app','*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',      # restframework
    'django_prometheus',   # prometheus
    'knox',                # knox
    'corsheaders',         # cors. api는 3000 포트, 장고는 8000포트에 있음
    'drf_yasg',            # swagger
    'mia',                 # 장고 메인 앱
    'accounts',            # 회원가입, 로그인 
]

MIDDLEWARE = [
    # 모니터링 : before prometheus
    'django_prometheus.middleware.PrometheusBeforeMiddleware',
    # cors. api는 3000 포트, 장고는 8000포트에 있음
    'corsheaders.middleware.CorsMiddleware',
    # 생성시 기본으로 있는 미들웨어들
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 모니터링 : after prometheus
    'django_prometheus.middleware.PrometheusAfterMiddleware',
]

ROOT_URLCONF = 'projectMIA.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            # cors. 8000번 포트에서 개발한 페이지를 볼 수 있도록 build폴더에 파일 압축 및 병합
            os.path.join(BASE_DIR, 'mia-react-app', 'build'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'projectMIA.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'miadb',
#         'USER' : 'mia',
#         'PASSWORD' : '12344321',
#         'HOST' : 'mysql_db',
#         'PORT' : '3306'
#     }
# }

#docker아님
DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.mysql',
        'ENGINE': 'django_prometheus.db.backends.mysql',
        'NAME': 'miadb',
        'USER' : 'mia',
        'PASSWORD' : '12344321',
        'HOST' : 'localhost',
        'PORT' : '3306',
    },
}


REST_FRAMEWORK = {
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.LimitOffsetPagination",
    "PAGE_SIZE": 100,
    "DEFAULT_AUTHENTICATION_CLASSES": ("knox.auth.TokenAuthentication",),
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# cors-headers
# 자신 이외의 다른 도메인이 리소스에 접근하는 것을 허용 
# CORS_ORIGIN_WHITELIST = (
#     'http://127.0.0.1:3000',
#     'http://127.0.0.1:8000',
# )

# CORS_ALLOW_CREDENTIALS = True

CORS_ORIGIN_ALLOW_ALL = True


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
    os.path.join(ROOT_DIR, 'mia-react-app', 'build', 'static'),
    # str(APPS_DIR.path('static')),
    # str(ROOT_DIR.path('mia-react-app', 'build', 'static')),

]
# STATIC_ROOT = os.path.join(BASE_DIR,'staticfiles')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
